version: '3.7'

services:
  devdns:
    image: ruudud/devdns
    container_name: devdns
    ports:
        - "127.0.0.1:53:53/udp"
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock:ro
    environment:
      TZ: ${TZ}
      NETWORK: ${DOCKER_NETWORK:-docker-migrid_default}

  # The migrid core services including httpd and tightly integrated services
  # like job handling (grid script, monitor, sshmux, imnoty and vmproxy)

  # NOTE: in order to test the publishing of container services on the host
  #       with standard ports on 1.2.3.x one can set up a local dummy device:
  #       sudo ip link add dummylan type dummy
  #       sudo ip addr add 1.2.3.1/24 dev dummylan
  #       sudo ip link set dummylan up
  #
  #       Then use the local firewall to forward the standard low service ports
  #       to the exposed high ones.

  migrid:
    container_name: migrid
    image: ucphhpc/migrid:$BUILD_TYPE
    build:
      context: ./
      dockerfile: Dockerfile
      # IMPORTANT: pass all ARGs used in Dockerfile here to allow optional override from .env file
      args:
        UID: ${UID:-1000}
        GID: ${GID:-1000}
        BUILD_TYPE: ${BUILD_TYPE}
        BUILD_TARGET: ${BUILD_TARGET}
        DOMAIN: ${DOMAIN}
        WILDCARD_DOMAIN: ${WILDCARD_DOMAIN}
        PUBLIC_DOMAIN: ${PUBLIC_DOMAIN}
        MIGCERT_DOMAIN: ${MIGCERT_DOMAIN}
        EXTCERT_DOMAIN: ${EXTCERT_DOMAIN}
        MIGOID_DOMAIN: ${MIGOID_DOMAIN}
        EXTOID_DOMAIN: ${EXTOID_DOMAIN}
        EXTOIDC_DOMAIN: ${EXTOIDC_DOMAIN}
        SID_DOMAIN: ${SID_DOMAIN}
        IO_DOMAIN: ${IO_DOMAIN}
        OPENID_DOMAIN: ${OPENID_DOMAIN}
        FTPS_DOMAIN: ${FTPS_DOMAIN}
        SFTP_DOMAIN: ${SFTP_DOMAIN}
        WEBDAVS_DOMAIN: ${WEBDAVS_DOMAIN}
        MIG_OID_PROVIDER: ${MIG_OID_PROVIDER}
        EXT_OID_PROVIDER: ${EXT_OID_PROVIDER}
        EXT_OIDC_PROVIDER_META_URL: ${EXT_OIDC_PROVIDER_META_URL}
        EXT_OIDC_CLIENT_NAME: ${EXT_OIDC_CLIENT_NAME}
        EXT_OIDC_CLIENT_ID: ${EXT_OIDC_CLIENT_ID}
        EXT_OIDC_SCOPE: ${EXT_OIDC_SCOPE}
        EXT_OIDC_REMOTE_USER_CLAIM: ${EXT_OIDC_REMOTE_USER_CLAIM}
        PUBLIC_HTTP_PORT: ${PUBLIC_HTTP_PORT}
        PUBLIC_HTTPS_PORT: ${PUBLIC_HTTPS_PORT}
        MIGCERT_HTTPS_PORT: ${MIGCERT_HTTPS_PORT}
        EXTCERT_HTTPS_PORT: ${EXTCERT_HTTPS_PORT}
        MIGOID_HTTPS_PORT: ${MIGOID_HTTPS_PORT}
        EXTOID_HTTPS_PORT: ${EXTOID_HTTPS_PORT}
        EXTOIDC_HTTPS_PORT: ${EXTOIDC_HTTPS_PORT}
        SID_HTTPS_PORT: ${SID_HTTPS_PORT}
        SFTP_PORT: ${SFTP_PORT}
        SFTP_SUBSYS_PORT: ${SFTP_SUBSYS_PORT}
        SFTP_SHOW_PORT: ${SFTP_SHOW_PORT}
        DAVS_PORT: ${DAVS_PORT}
        DAVS_SHOW_PORT: ${DAVS_SHOW_PORT}
        OPENID_PORT: ${OPENID_PORT}
        OPENID_SHOW_PORT: ${OPENID_SHOW_PORT}
        FTPS_CTRL_PORT: ${FTPS_CTRL_PORT}
        FTPS_CTRL_SHOW_PORT: ${FTPS_CTRL_SHOW_PORT}
        ADMIN_EMAIL: ${ADMIN_EMAIL}
        ADMIN_LIST: ${ADMIN_LIST}
        SMTP_SENDER: ${SMTP_SENDER}
        SMTP_SERVER: ${SMTP_SERVER}
        LOG_LEVEL: ${LOG_LEVEL}
        TITLE: ${TITLE}
        SHORT_TITLE: ${SHORT_TITLE}
        MIG_OID_TITLE: ${MIG_OID_TITLE}
        EXT_OID_TITLE: ${EXT_OID_TITLE}
        PEERS_PERMIT: ${PEERS_PERMIT}
        VGRID_CREATORS: ${VGRID_CREATORS}
        VGRID_MANAGERS: ${VGRID_MANAGERS}
        MIG_SVN_REPO: ${MIG_SVN_REPO}
        MIG_SVN_REV: ${MIG_SVN_REV}
        MIG_GIT_REPO: ${MIG_GIT_REPO}
        MIG_GIT_BRANCH: ${MIG_GIT_BRANCH}
        MIG_GIT_REV: ${MIG_GIT_REV}
        EMULATE_FLAVOR: ${EMULATE_FLAVOR}
        EMULATE_FQDN: ${EMULATE_FQDN}
        SKIN_SUFFIX: ${SKIN_SUFFIX}
        ENABLE_OPENID: ${ENABLE_OPENID}
        ENABLE_SFTP: ${ENABLE_SFTP}
        ENABLE_SFTP_SUBSYS: ${ENABLE_SFTP_SUBSYS}
        ENABLE_DAVS: ${ENABLE_DAVS}
        ENABLE_FTPS: ${ENABLE_FTPS}
        ENABLE_SHARELINKS: ${ENABLE_SHARELINKS}
        ENABLE_TRANSFERS: ${ENABLE_TRANSFERS}
        ENABLE_DUPLICATI: ${ENABLE_DUPLICATI}
        ENABLE_SEAFILE: ${ENABLE_SEAFILE}
        ENABLE_SANDBOXES: ${ENABLE_SANDBOXES}
        ENABLE_VMACHINES: ${ENABLE_VMACHINES}
        ENABLE_CRONTAB: ${ENABLE_CRONTAB}
        ENABLE_JOBS: ${ENABLE_JOBS}
        ENABLE_RESOURCES: ${ENABLE_RESOURCES}
        ENABLE_EVENTS: ${ENABLE_EVENTS}
        ENABLE_FREEZE: ${ENABLE_FREEZE}
        ENABLE_CRACKLIB: ${ENABLE_CRACKLIB}
        ENABLE_IMNOTIFY: ${ENABLE_IMNOTIFY}
        ENABLE_NOTIFY: ${ENABLE_NOTIFY}
        ENABLE_PREVIEW: ${ENABLE_PREVIEW}
        ENABLE_WORKFLOWS: ${ENABLE_WORKFLOWS}
        ENABLE_VERIFY_CERTS: ${ENABLE_VERIFY_CERTS}
        ENABLE_JUPYTER: ${ENABLE_JUPYTER}
        ENABLE_MIGADMIN: ${ENABLE_MIGADMIN}
        ENABLE_GDP: ${ENABLE_GDP}
        ENABLE_TWOFACTOR: ${ENABLE_TWOFACTOR}
        ENABLE_TWOFACTOR_STRICT_ADDRESS: ${ENABLE_TWOFACTOR_STRICT_ADDRESS}
        ENABLE_PEERS: ${ENABLE_PEERS}
        MIG_PASSWORD_POLICY: ${MIG_PASSWORD_POLICY}
        PEERS_MANDATORY: ${PEERS_MANDATORY}
        PEERS_EXPLICIT_FIELDS: ${PEERS_EXPLICIT_FIELDS}
        PEERS_CONTACT_HINT: ${PEERS_CONTACT_HINT}
        ENABLE_SELF_SIGNED_CERTS: ${ENABLE_SELF_SIGNED_CERTS}
        BUILD_MOD_AUTH_OPENID: ${BUILD_MOD_AUTH_OPENID:-False}
        UPGRADE_MOD_AUTH_OPENIDC: ${UPGRADE_MOD_AUTH_OPENIDC:-False}
        UPGRADE_PARAMIKO: ${UPGRADE_PARAMIKO:-False}
        PUBKEY_FROM_DNS: ${PUBKEY_FROM_DNS}
        PREFER_PYTHON3: ${PREFER_PYTHON3}
        SIGNUP_METHODS: ${SIGNUP_METHODS}
        LOGIN_METHODS: ${LOGIN_METHODS}
        USER_INTERFACES: ${USER_INTERFACES}
        AUTO_ADD_CERT_USER: ${AUTO_ADD_CERT_USER}
        AUTO_ADD_OID_USER: ${AUTO_ADD_OID_USER}
        AUTO_ADD_OIDC_USER: ${AUTO_ADD_OIDC_USER}
        CERT_VALID_DAYS: ${CERT_VALID_DAYS}
        OID_VALID_DAYS: ${OID_VALID_DAYS}
        GENERIC_VALID_DAYS: ${GENERIC_VALID_DAYS}
        DEFAULT_MENU: ${DEFAULT_MENU}
        USER_MENU: ${USER_MENU}
        WITH_PY3: ${WITH_PY3}
        WITH_GIT: ${WITH_GIT}
        JUPYTER_SERVICES: ${JUPYTER_SERVICES}
        JUPYTER_SERVICES_DESC: ${JUPYTER_SERVICES_DESC}
        VGRID_LABEL: ${VGRID_LABEL}
        EXTRA_USERPAGE_SCRIPTS: ${EXTRA_USERPAGE_SCRIPTS}
        EXTRA_USERPAGE_STYLES: ${EXTRA_USERPAGE_STYLES}
        GDP_EMAIL_NOTIFY: ${GDP_EMAIL_NOTIFY}
        MODERN_WSGIDAV: ${MODERN_WSGIDAV}
    environment:
      TZ: ${TZ}
      # RUN_SERVICES specifies which daemons to launch
      # Available target service names follow migrid init script and are:
      #   httpd script monitor sshmux events cron transfers
      #   openid sftp sftpsubsys webdavs ftps notify imnotify vmproxy
      RUN_SERVICES: httpd script monitor sshmux events cron transfers imnotify vmproxy rsyslogd
    depends_on:
      - devdns
    networks:
      default:
        aliases:
          - www.migrid.test
          - cert.migrid.test
          - ext.migrid.test
          - oid.migrid.test
          - sid.migrid.test
    volumes:
      - type: volume
        source: httpd
        target: /etc/httpd/
      - type: volume
        source: mig
        target: /home/mig/mig
      - type: volume
        source: certs
        target: /etc/httpd/MiG-certificates
      - type: volume
        source: state
        target: /home/mig/state
      - type: volume
        source: migrid-syslog
        target: /var/log
    env_file:
      - migrid-httpd.env
    # IMPORTANT: please ONLY run with this test@ user for non-public hosts
    command: /app/docker-entry.sh -u ${MIG_TEST_USER} -p ${MIG_TEST_USER_PASSWORD} -s "sftp ftps webdavs"
    # NOTE: public hosts should create users through sign up and run like this
    #command: /app/docker-entry.sh


  # TODO: simplify migrid-X containers with extends and a migrid-shared.yml ?
  #
  # Multiple containers with individual daemons not provided by base migrid
  migrid-openid:
    container_name: migrid-openid
    image: ucphhpc/migrid:$BUILD_TYPE
    build:
      context: ./
      dockerfile: Dockerfile
      # IMPORTANT: pass all ARGs used in Dockerfile here to allow optional override from .env file
      args:
        UID: ${UID:-1000}
        GID: ${GID:-1000}
        BUILD_TYPE: ${BUILD_TYPE}
        BUILD_TARGET: ${BUILD_TARGET}
        DOMAIN: ${DOMAIN}
        WILDCARD_DOMAIN: ${WILDCARD_DOMAIN}
        PUBLIC_DOMAIN: ${PUBLIC_DOMAIN}
        MIGCERT_DOMAIN: ${MIGCERT_DOMAIN}
        EXTCERT_DOMAIN: ${EXTCERT_DOMAIN}
        MIGOID_DOMAIN: ${MIGOID_DOMAIN}
        EXTOID_DOMAIN: ${EXTOID_DOMAIN}
        EXTOIDC_DOMAIN: ${EXTOIDC_DOMAIN}
        SID_DOMAIN: ${SID_DOMAIN}
        IO_DOMAIN: ${IO_DOMAIN}
        OPENID_DOMAIN: ${OPENID_DOMAIN}
        FTPS_DOMAIN: ${FTPS_DOMAIN}
        SFTP_DOMAIN: ${SFTP_DOMAIN}
        WEBDAVS_DOMAIN: ${WEBDAVS_DOMAIN}
        MIG_OID_PROVIDER: ${MIG_OID_PROVIDER}
        EXT_OID_PROVIDER: ${EXT_OID_PROVIDER}
        EXT_OIDC_PROVIDER_META_URL: ${EXT_OIDC_PROVIDER_META_URL}
        EXT_OIDC_CLIENT_NAME: ${EXT_OIDC_CLIENT_NAME}
        EXT_OIDC_CLIENT_ID: ${EXT_OIDC_CLIENT_ID}
        EXT_OIDC_SCOPE: ${EXT_OIDC_SCOPE}
        EXT_OIDC_REMOTE_USER_CLAIM: ${EXT_OIDC_REMOTE_USER_CLAIM}
        PUBLIC_HTTP_PORT: ${PUBLIC_HTTP_PORT}
        PUBLIC_HTTPS_PORT: ${PUBLIC_HTTPS_PORT}
        MIGCERT_HTTPS_PORT: ${MIGCERT_HTTPS_PORT}
        EXTCERT_HTTPS_PORT: ${EXTCERT_HTTPS_PORT}
        MIGOID_HTTPS_PORT: ${MIGOID_HTTPS_PORT}
        EXTOID_HTTPS_PORT: ${EXTOID_HTTPS_PORT}
        EXTOIDC_HTTPS_PORT: ${EXTOIDC_HTTPS_PORT}
        SID_HTTPS_PORT: ${SID_HTTPS_PORT}
        SFTP_PORT: ${SFTP_PORT}
        SFTP_SUBSYS_PORT: ${SFTP_SUBSYS_PORT}
        SFTP_SHOW_PORT: ${SFTP_SHOW_PORT}
        DAVS_PORT: ${DAVS_PORT}
        DAVS_SHOW_PORT: ${DAVS_SHOW_PORT}
        OPENID_PORT: ${OPENID_PORT}
        OPENID_SHOW_PORT: ${OPENID_SHOW_PORT}
        FTPS_CTRL_PORT: ${FTPS_CTRL_PORT}
        FTPS_CTRL_SHOW_PORT: ${FTPS_CTRL_SHOW_PORT}
        ADMIN_EMAIL: ${ADMIN_EMAIL}
        ADMIN_LIST: ${ADMIN_LIST}
        SMTP_SENDER: ${SMTP_SENDER}
        SMTP_SERVER: ${SMTP_SERVER}
        LOG_LEVEL: ${LOG_LEVEL}
        TITLE: ${TITLE}
        SHORT_TITLE: ${SHORT_TITLE}
        MIG_OID_TITLE: ${MIG_OID_TITLE}
        EXT_OID_TITLE: ${EXT_OID_TITLE}
        PEERS_PERMIT: ${PEERS_PERMIT}
        VGRID_CREATORS: ${VGRID_CREATORS}
        VGRID_MANAGERS: ${VGRID_MANAGERS}
        MIG_SVN_REPO: ${MIG_SVN_REPO}
        MIG_SVN_REV: ${MIG_SVN_REV}
        MIG_GIT_REPO: ${MIG_GIT_REPO}
        MIG_GIT_BRANCH: ${MIG_GIT_BRANCH}
        MIG_GIT_REV: ${MIG_GIT_REV}
        EMULATE_FLAVOR: ${EMULATE_FLAVOR}
        EMULATE_FQDN: ${EMULATE_FQDN}
        SKIN_SUFFIX: ${SKIN_SUFFIX}
        ENABLE_OPENID: ${ENABLE_OPENID}
        ENABLE_SFTP: ${ENABLE_SFTP}
        ENABLE_SFTP_SUBSYS: ${ENABLE_SFTP_SUBSYS}
        ENABLE_DAVS: ${ENABLE_DAVS}
        ENABLE_FTPS: ${ENABLE_FTPS}
        ENABLE_SHARELINKS: ${ENABLE_SHARELINKS}
        ENABLE_TRANSFERS: ${ENABLE_TRANSFERS}
        ENABLE_DUPLICATI: ${ENABLE_DUPLICATI}
        ENABLE_SEAFILE: ${ENABLE_SEAFILE}
        ENABLE_SANDBOXES: ${ENABLE_SANDBOXES}
        ENABLE_VMACHINES: ${ENABLE_VMACHINES}
        ENABLE_CRONTAB: ${ENABLE_CRONTAB}
        ENABLE_JOBS: ${ENABLE_JOBS}
        ENABLE_RESOURCES: ${ENABLE_RESOURCES}
        ENABLE_EVENTS: ${ENABLE_EVENTS}
        ENABLE_FREEZE: ${ENABLE_FREEZE}
        ENABLE_CRACKLIB: ${ENABLE_CRACKLIB}
        ENABLE_IMNOTIFY: ${ENABLE_IMNOTIFY}
        ENABLE_NOTIFY: ${ENABLE_NOTIFY}
        ENABLE_PREVIEW: ${ENABLE_PREVIEW}
        ENABLE_WORKFLOWS: ${ENABLE_WORKFLOWS}
        ENABLE_VERIFY_CERTS: ${ENABLE_VERIFY_CERTS}
        ENABLE_JUPYTER: ${ENABLE_JUPYTER}
        ENABLE_MIGADMIN: ${ENABLE_MIGADMIN}
        ENABLE_GDP: ${ENABLE_GDP}
        ENABLE_TWOFACTOR: ${ENABLE_TWOFACTOR}
        ENABLE_TWOFACTOR_STRICT_ADDRESS: ${ENABLE_TWOFACTOR_STRICT_ADDRESS}
        ENABLE_PEERS: ${ENABLE_PEERS}
        MIG_PASSWORD_POLICY: ${MIG_PASSWORD_POLICY}
        PEERS_MANDATORY: ${PEERS_MANDATORY}
        PEERS_EXPLICIT_FIELDS: ${PEERS_EXPLICIT_FIELDS}
        PEERS_CONTACT_HINT: ${PEERS_CONTACT_HINT}
        ENABLE_SELF_SIGNED_CERTS: ${ENABLE_SELF_SIGNED_CERTS}
        BUILD_MOD_AUTH_OPENID: ${BUILD_MOD_AUTH_OPENID:-False}
        UPGRADE_MOD_AUTH_OPENIDC: ${UPGRADE_MOD_AUTH_OPENIDC:-False}
        UPGRADE_PARAMIKO: ${UPGRADE_PARAMIKO:-False}
        PUBKEY_FROM_DNS: ${PUBKEY_FROM_DNS}
        PREFER_PYTHON3: ${PREFER_PYTHON3}
        SIGNUP_METHODS: ${SIGNUP_METHODS}
        LOGIN_METHODS: ${LOGIN_METHODS}
        USER_INTERFACES: ${USER_INTERFACES}
        AUTO_ADD_CERT_USER: ${AUTO_ADD_CERT_USER}
        AUTO_ADD_OID_USER: ${AUTO_ADD_OID_USER}
        AUTO_ADD_OIDC_USER: ${AUTO_ADD_OIDC_USER}
        CERT_VALID_DAYS: ${CERT_VALID_DAYS}
        OID_VALID_DAYS: ${OID_VALID_DAYS}
        GENERIC_VALID_DAYS: ${GENERIC_VALID_DAYS}
        DEFAULT_MENU: ${DEFAULT_MENU}
        USER_MENU: ${USER_MENU}
        WITH_PY3: ${WITH_PY3}
        WITH_GIT: ${WITH_GIT}
        JUPYTER_SERVICES: ${JUPYTER_SERVICES}
        JUPYTER_SERVICES_DESC: ${JUPYTER_SERVICES_DESC}
        VGRID_LABEL: ${VGRID_LABEL}
        EXTRA_USERPAGE_SCRIPTS: ${EXTRA_USERPAGE_SCRIPTS}
        EXTRA_USERPAGE_STYLES: ${EXTRA_USERPAGE_STYLES}
        GDP_EMAIL_NOTIFY: ${GDP_EMAIL_NOTIFY}
        MODERN_WSGIDAV: ${MODERN_WSGIDAV}
    environment:
      TZ: ${TZ}
      # RUN_SERVICES specifies which daemons to launch
      # Available target service names follow migrid init script and are:
      #   httpd script monitor sshmux events cron transfers
      #   openid sftp sftpsubsys webdavs ftps notify imnotify vmproxy
      RUN_SERVICES: openid rsyslogd
    depends_on:
      - migrid
    ports:
      # NOTE: expose the unique raw port(s) to host 
      - "8443:8443"
    networks:
      default:
        aliases:
          - openid.migrid.test
    volumes:
      - type: volume
        source: httpd
        target: /etc/httpd/
      - type: volume
        source: mig
        target: /home/mig/mig
      - type: volume
        source: certs
        target: /etc/httpd/MiG-certificates
      - type: volume
        source: state
        target: /home/mig/state
      - type: volume
        source: migrid-openid-syslog
        target: /var/log
    command: /app/docker-entry.sh

  migrid-sftp:
    container_name: migrid-sftp
    image: ucphhpc/migrid:$BUILD_TYPE
    build:
      context: ./
      dockerfile: Dockerfile
      # IMPORTANT: pass all ARGs used in Dockerfile here to allow optional override from .env file
      args:
        UID: ${UID:-1000}
        GID: ${GID:-1000}
        BUILD_TYPE: ${BUILD_TYPE}
        BUILD_TARGET: ${BUILD_TARGET}
        DOMAIN: ${DOMAIN}
        WILDCARD_DOMAIN: ${WILDCARD_DOMAIN}
        PUBLIC_DOMAIN: ${PUBLIC_DOMAIN}
        MIGCERT_DOMAIN: ${MIGCERT_DOMAIN}
        EXTCERT_DOMAIN: ${EXTCERT_DOMAIN}
        MIGOID_DOMAIN: ${MIGOID_DOMAIN}
        EXTOID_DOMAIN: ${EXTOID_DOMAIN}
        EXTOIDC_DOMAIN: ${EXTOIDC_DOMAIN}
        SID_DOMAIN: ${SID_DOMAIN}
        IO_DOMAIN: ${IO_DOMAIN}
        OPENID_DOMAIN: ${OPENID_DOMAIN}
        FTPS_DOMAIN: ${FTPS_DOMAIN}
        SFTP_DOMAIN: ${SFTP_DOMAIN}
        WEBDAVS_DOMAIN: ${WEBDAVS_DOMAIN}
        MIG_OID_PROVIDER: ${MIG_OID_PROVIDER}
        EXT_OID_PROVIDER: ${EXT_OID_PROVIDER}
        EXT_OIDC_PROVIDER_META_URL: ${EXT_OIDC_PROVIDER_META_URL}
        EXT_OIDC_CLIENT_NAME: ${EXT_OIDC_CLIENT_NAME}
        EXT_OIDC_CLIENT_ID: ${EXT_OIDC_CLIENT_ID}
        EXT_OIDC_SCOPE: ${EXT_OIDC_SCOPE}
        EXT_OIDC_REMOTE_USER_CLAIM: ${EXT_OIDC_REMOTE_USER_CLAIM}
        PUBLIC_HTTP_PORT: ${PUBLIC_HTTP_PORT}
        PUBLIC_HTTPS_PORT: ${PUBLIC_HTTPS_PORT}
        MIGCERT_HTTPS_PORT: ${MIGCERT_HTTPS_PORT}
        EXTCERT_HTTPS_PORT: ${EXTCERT_HTTPS_PORT}
        MIGOID_HTTPS_PORT: ${MIGOID_HTTPS_PORT}
        EXTOID_HTTPS_PORT: ${EXTOID_HTTPS_PORT}
        EXTOIDC_HTTPS_PORT: ${EXTOIDC_HTTPS_PORT}
        SID_HTTPS_PORT: ${SID_HTTPS_PORT}
        SFTP_PORT: ${SFTP_PORT}
        SFTP_SUBSYS_PORT: ${SFTP_SUBSYS_PORT}
        SFTP_SHOW_PORT: ${SFTP_SHOW_PORT}
        DAVS_PORT: ${DAVS_PORT}
        DAVS_SHOW_PORT: ${DAVS_SHOW_PORT}
        OPENID_PORT: ${OPENID_PORT}
        OPENID_SHOW_PORT: ${OPENID_SHOW_PORT}
        FTPS_CTRL_PORT: ${FTPS_CTRL_PORT}
        FTPS_CTRL_SHOW_PORT: ${FTPS_CTRL_SHOW_PORT}
        ADMIN_EMAIL: ${ADMIN_EMAIL}
        ADMIN_LIST: ${ADMIN_LIST}
        SMTP_SENDER: ${SMTP_SENDER}
        SMTP_SERVER: ${SMTP_SERVER}
        LOG_LEVEL: ${LOG_LEVEL}
        TITLE: ${TITLE}
        SHORT_TITLE: ${SHORT_TITLE}
        MIG_OID_TITLE: ${MIG_OID_TITLE}
        EXT_OID_TITLE: ${EXT_OID_TITLE}
        PEERS_PERMIT: ${PEERS_PERMIT}
        VGRID_CREATORS: ${VGRID_CREATORS}
        VGRID_MANAGERS: ${VGRID_MANAGERS}
        MIG_SVN_REPO: ${MIG_SVN_REPO}
        MIG_SVN_REV: ${MIG_SVN_REV}
        MIG_GIT_REPO: ${MIG_GIT_REPO}
        MIG_GIT_BRANCH: ${MIG_GIT_BRANCH}
        MIG_GIT_REV: ${MIG_GIT_REV}
        EMULATE_FLAVOR: ${EMULATE_FLAVOR}
        EMULATE_FQDN: ${EMULATE_FQDN}
        SKIN_SUFFIX: ${SKIN_SUFFIX}
        ENABLE_OPENID: ${ENABLE_OPENID}
        ENABLE_SFTP: ${ENABLE_SFTP}
        ENABLE_SFTP_SUBSYS: ${ENABLE_SFTP_SUBSYS}
        ENABLE_DAVS: ${ENABLE_DAVS}
        ENABLE_FTPS: ${ENABLE_FTPS}
        ENABLE_SHARELINKS: ${ENABLE_SHARELINKS}
        ENABLE_TRANSFERS: ${ENABLE_TRANSFERS}
        ENABLE_DUPLICATI: ${ENABLE_DUPLICATI}
        ENABLE_SEAFILE: ${ENABLE_SEAFILE}
        ENABLE_SANDBOXES: ${ENABLE_SANDBOXES}
        ENABLE_VMACHINES: ${ENABLE_VMACHINES}
        ENABLE_CRONTAB: ${ENABLE_CRONTAB}
        ENABLE_JOBS: ${ENABLE_JOBS}
        ENABLE_RESOURCES: ${ENABLE_RESOURCES}
        ENABLE_EVENTS: ${ENABLE_EVENTS}
        ENABLE_FREEZE: ${ENABLE_FREEZE}
        ENABLE_CRACKLIB: ${ENABLE_CRACKLIB}
        ENABLE_IMNOTIFY: ${ENABLE_IMNOTIFY}
        ENABLE_NOTIFY: ${ENABLE_NOTIFY}
        ENABLE_PREVIEW: ${ENABLE_PREVIEW}
        ENABLE_WORKFLOWS: ${ENABLE_WORKFLOWS}
        ENABLE_VERIFY_CERTS: ${ENABLE_VERIFY_CERTS}
        ENABLE_JUPYTER: ${ENABLE_JUPYTER}
        ENABLE_MIGADMIN: ${ENABLE_MIGADMIN}
        ENABLE_GDP: ${ENABLE_GDP}
        ENABLE_TWOFACTOR: ${ENABLE_TWOFACTOR}
        ENABLE_TWOFACTOR_STRICT_ADDRESS: ${ENABLE_TWOFACTOR_STRICT_ADDRESS}
        ENABLE_PEERS: ${ENABLE_PEERS}
        MIG_PASSWORD_POLICY: ${MIG_PASSWORD_POLICY}
        PEERS_MANDATORY: ${PEERS_MANDATORY}
        PEERS_EXPLICIT_FIELDS: ${PEERS_EXPLICIT_FIELDS}
        PEERS_CONTACT_HINT: ${PEERS_CONTACT_HINT}
        ENABLE_SELF_SIGNED_CERTS: ${ENABLE_SELF_SIGNED_CERTS}
        BUILD_MOD_AUTH_OPENID: ${BUILD_MOD_AUTH_OPENID:-False}
        UPGRADE_MOD_AUTH_OPENIDC: ${UPGRADE_MOD_AUTH_OPENIDC:-False}
        UPGRADE_PARAMIKO: ${UPGRADE_PARAMIKO:-False}
        PUBKEY_FROM_DNS: ${PUBKEY_FROM_DNS}
        PREFER_PYTHON3: ${PREFER_PYTHON3}
        SIGNUP_METHODS: ${SIGNUP_METHODS}
        LOGIN_METHODS: ${LOGIN_METHODS}
        USER_INTERFACES: ${USER_INTERFACES}
        AUTO_ADD_CERT_USER: ${AUTO_ADD_CERT_USER}
        AUTO_ADD_OID_USER: ${AUTO_ADD_OID_USER}
        AUTO_ADD_OIDC_USER: ${AUTO_ADD_OIDC_USER}
        CERT_VALID_DAYS: ${CERT_VALID_DAYS}
        OID_VALID_DAYS: ${OID_VALID_DAYS}
        GENERIC_VALID_DAYS: ${GENERIC_VALID_DAYS}
        DEFAULT_MENU: ${DEFAULT_MENU}
        USER_MENU: ${USER_MENU}
        WITH_PY3: ${WITH_PY3}
        WITH_GIT: ${WITH_GIT}
        JUPYTER_SERVICES: ${JUPYTER_SERVICES}
        JUPYTER_SERVICES_DESC: ${JUPYTER_SERVICES_DESC}
        VGRID_LABEL: ${VGRID_LABEL}
        EXTRA_USERPAGE_SCRIPTS: ${EXTRA_USERPAGE_SCRIPTS}
        EXTRA_USERPAGE_STYLES: ${EXTRA_USERPAGE_STYLES}
        GDP_EMAIL_NOTIFY: ${GDP_EMAIL_NOTIFY}
        MODERN_WSGIDAV: ${MODERN_WSGIDAV}
    environment:
      TZ: ${TZ}
      # RUN_SERVICES specifies which daemons to launch
      # Available target service names follow migrid init script and are:
      #   httpd script monitor sshmux events cron transfers
      #   openid sftp sftpsubsys webdavs ftps notify imnotify vmproxy
      RUN_SERVICES: sftp sftpsubsys rsyslogd
    depends_on:
      - migrid
    ports:
      # NOTE: expose the unique raw port(s) to host 
      - "2222:2222"
      - "22222:22222"
    networks:
      default:
        aliases:
          - sftp.migrid.test
    volumes:
      - type: volume
        source: httpd
        target: /etc/httpd/
      - type: volume
        source: mig
        target: /home/mig/mig
      - type: volume
        source: certs
        target: /etc/httpd/MiG-certificates
      - type: volume
        source: state
        target: /home/mig/state
      - type: volume
        source: migrid-sftp-syslog
        target: /var/log
    command: /app/docker-entry.sh

  migrid-ftps:
    container_name: migrid-ftps
    image: ucphhpc/migrid:$BUILD_TYPE
    build:
      context: ./
      dockerfile: Dockerfile
      # IMPORTANT: pass all ARGs used in Dockerfile here to allow optional override from .env file
      args:
        UID: ${UID:-1000}
        GID: ${GID:-1000}
        BUILD_TYPE: ${BUILD_TYPE}
        BUILD_TARGET: ${BUILD_TARGET}
        DOMAIN: ${DOMAIN}
        WILDCARD_DOMAIN: ${WILDCARD_DOMAIN}
        PUBLIC_DOMAIN: ${PUBLIC_DOMAIN}
        MIGCERT_DOMAIN: ${MIGCERT_DOMAIN}
        EXTCERT_DOMAIN: ${EXTCERT_DOMAIN}
        MIGOID_DOMAIN: ${MIGOID_DOMAIN}
        EXTOID_DOMAIN: ${EXTOID_DOMAIN}
        EXTOIDC_DOMAIN: ${EXTOIDC_DOMAIN}
        SID_DOMAIN: ${SID_DOMAIN}
        IO_DOMAIN: ${IO_DOMAIN}
        OPENID_DOMAIN: ${OPENID_DOMAIN}
        FTPS_DOMAIN: ${FTPS_DOMAIN}
        SFTP_DOMAIN: ${SFTP_DOMAIN}
        WEBDAVS_DOMAIN: ${WEBDAVS_DOMAIN}
        MIG_OID_PROVIDER: ${MIG_OID_PROVIDER}
        EXT_OID_PROVIDER: ${EXT_OID_PROVIDER}
        EXT_OIDC_PROVIDER_META_URL: ${EXT_OIDC_PROVIDER_META_URL}
        EXT_OIDC_CLIENT_NAME: ${EXT_OIDC_CLIENT_NAME}
        EXT_OIDC_CLIENT_ID: ${EXT_OIDC_CLIENT_ID}
        EXT_OIDC_SCOPE: ${EXT_OIDC_SCOPE}
        EXT_OIDC_REMOTE_USER_CLAIM: ${EXT_OIDC_REMOTE_USER_CLAIM}
        PUBLIC_HTTP_PORT: ${PUBLIC_HTTP_PORT}
        PUBLIC_HTTPS_PORT: ${PUBLIC_HTTPS_PORT}
        MIGCERT_HTTPS_PORT: ${MIGCERT_HTTPS_PORT}
        EXTCERT_HTTPS_PORT: ${EXTCERT_HTTPS_PORT}
        MIGOID_HTTPS_PORT: ${MIGOID_HTTPS_PORT}
        EXTOID_HTTPS_PORT: ${EXTOID_HTTPS_PORT}
        EXTOIDC_HTTPS_PORT: ${EXTOIDC_HTTPS_PORT}
        SID_HTTPS_PORT: ${SID_HTTPS_PORT}
        SFTP_PORT: ${SFTP_PORT}
        SFTP_SUBSYS_PORT: ${SFTP_SUBSYS_PORT}
        SFTP_SHOW_PORT: ${SFTP_SHOW_PORT}
        DAVS_PORT: ${DAVS_PORT}
        DAVS_SHOW_PORT: ${DAVS_SHOW_PORT}
        OPENID_PORT: ${OPENID_PORT}
        OPENID_SHOW_PORT: ${OPENID_SHOW_PORT}
        FTPS_CTRL_PORT: ${FTPS_CTRL_PORT}
        FTPS_CTRL_SHOW_PORT: ${FTPS_CTRL_SHOW_PORT}
        ADMIN_EMAIL: ${ADMIN_EMAIL}
        ADMIN_LIST: ${ADMIN_LIST}
        SMTP_SENDER: ${SMTP_SENDER}
        SMTP_SERVER: ${SMTP_SERVER}
        LOG_LEVEL: ${LOG_LEVEL}
        TITLE: ${TITLE}
        SHORT_TITLE: ${SHORT_TITLE}
        MIG_OID_TITLE: ${MIG_OID_TITLE}
        EXT_OID_TITLE: ${EXT_OID_TITLE}
        PEERS_PERMIT: ${PEERS_PERMIT}
        VGRID_CREATORS: ${VGRID_CREATORS}
        VGRID_MANAGERS: ${VGRID_MANAGERS}
        MIG_SVN_REPO: ${MIG_SVN_REPO}
        MIG_SVN_REV: ${MIG_SVN_REV}
        MIG_GIT_REPO: ${MIG_GIT_REPO}
        MIG_GIT_BRANCH: ${MIG_GIT_BRANCH}
        MIG_GIT_REV: ${MIG_GIT_REV}
        EMULATE_FLAVOR: ${EMULATE_FLAVOR}
        EMULATE_FQDN: ${EMULATE_FQDN}
        SKIN_SUFFIX: ${SKIN_SUFFIX}
        ENABLE_OPENID: ${ENABLE_OPENID}
        ENABLE_SFTP: ${ENABLE_SFTP}
        ENABLE_SFTP_SUBSYS: ${ENABLE_SFTP_SUBSYS}
        ENABLE_DAVS: ${ENABLE_DAVS}
        ENABLE_FTPS: ${ENABLE_FTPS}
        ENABLE_SHARELINKS: ${ENABLE_SHARELINKS}
        ENABLE_TRANSFERS: ${ENABLE_TRANSFERS}
        ENABLE_DUPLICATI: ${ENABLE_DUPLICATI}
        ENABLE_SEAFILE: ${ENABLE_SEAFILE}
        ENABLE_SANDBOXES: ${ENABLE_SANDBOXES}
        ENABLE_VMACHINES: ${ENABLE_VMACHINES}
        ENABLE_CRONTAB: ${ENABLE_CRONTAB}
        ENABLE_JOBS: ${ENABLE_JOBS}
        ENABLE_RESOURCES: ${ENABLE_RESOURCES}
        ENABLE_EVENTS: ${ENABLE_EVENTS}
        ENABLE_FREEZE: ${ENABLE_FREEZE}
        ENABLE_CRACKLIB: ${ENABLE_CRACKLIB}
        ENABLE_IMNOTIFY: ${ENABLE_IMNOTIFY}
        ENABLE_NOTIFY: ${ENABLE_NOTIFY}
        ENABLE_PREVIEW: ${ENABLE_PREVIEW}
        ENABLE_WORKFLOWS: ${ENABLE_WORKFLOWS}
        ENABLE_VERIFY_CERTS: ${ENABLE_VERIFY_CERTS}
        ENABLE_JUPYTER: ${ENABLE_JUPYTER}
        ENABLE_MIGADMIN: ${ENABLE_MIGADMIN}
        ENABLE_GDP: ${ENABLE_GDP}
        ENABLE_TWOFACTOR: ${ENABLE_TWOFACTOR}
        ENABLE_TWOFACTOR_STRICT_ADDRESS: ${ENABLE_TWOFACTOR_STRICT_ADDRESS}  
        ENABLE_PEERS: ${ENABLE_PEERS}
        MIG_PASSWORD_POLICY: ${MIG_PASSWORD_POLICY}
        PEERS_MANDATORY: ${PEERS_MANDATORY}
        PEERS_EXPLICIT_FIELDS: ${PEERS_EXPLICIT_FIELDS}
        PEERS_CONTACT_HINT: ${PEERS_CONTACT_HINT}
        ENABLE_SELF_SIGNED_CERTS: ${ENABLE_SELF_SIGNED_CERTS}
        BUILD_MOD_AUTH_OPENID: ${BUILD_MOD_AUTH_OPENID:-False}
        UPGRADE_MOD_AUTH_OPENIDC: ${UPGRADE_MOD_AUTH_OPENIDC:-False}
        UPGRADE_PARAMIKO: ${UPGRADE_PARAMIKO:-False}
        PUBKEY_FROM_DNS: ${PUBKEY_FROM_DNS}
        PREFER_PYTHON3: ${PREFER_PYTHON3}
        SIGNUP_METHODS: ${SIGNUP_METHODS}
        LOGIN_METHODS: ${LOGIN_METHODS}
        USER_INTERFACES: ${USER_INTERFACES}
        AUTO_ADD_CERT_USER: ${AUTO_ADD_CERT_USER}
        AUTO_ADD_OID_USER: ${AUTO_ADD_OID_USER}
        AUTO_ADD_OIDC_USER: ${AUTO_ADD_OIDC_USER}
        CERT_VALID_DAYS: ${CERT_VALID_DAYS}
        OID_VALID_DAYS: ${OID_VALID_DAYS}
        GENERIC_VALID_DAYS: ${GENERIC_VALID_DAYS}
        DEFAULT_MENU: ${DEFAULT_MENU}
        USER_MENU: ${USER_MENU}
        WITH_PY3: ${WITH_PY3}
        WITH_GIT: ${WITH_GIT}
        JUPYTER_SERVICES: ${JUPYTER_SERVICES}
        JUPYTER_SERVICES_DESC: ${JUPYTER_SERVICES_DESC}
        VGRID_LABEL: ${VGRID_LABEL}
        EXTRA_USERPAGE_SCRIPTS: ${EXTRA_USERPAGE_SCRIPTS}
        EXTRA_USERPAGE_STYLES: ${EXTRA_USERPAGE_STYLES}
        GDP_EMAIL_NOTIFY: ${GDP_EMAIL_NOTIFY}
        MODERN_WSGIDAV: ${MODERN_WSGIDAV}
    environment:
      TZ: ${TZ}
      # RUN_SERVICES specifies which daemons to launch
      # Available target service names follow migrid init script and are:
      #   httpd script monitor sshmux events cron transfers
      #   openid sftp sftpsubsys webdavs ftps notify imnotify vmproxy
      RUN_SERVICES: ftps rsyslogd
    depends_on:
      - migrid
    ports:
      # NOTE: expose the unique raw port(s) to host 
      - "8021:8021"
      - "8100-8399:8100-8399"
    networks:
      default:
        aliases:
          - ftps.migrid.test
    volumes:
      - type: volume
        source: httpd
        target: /etc/httpd/
      - type: volume
        source: mig
        target: /home/mig/mig
      - type: volume
        source: certs
        target: /etc/httpd/MiG-certificates
      - type: volume
        source: state
        target: /home/mig/state
      - type: volume
        source: migrid-ftps-syslog
        target: /var/log
    command: /app/docker-entry.sh

  migrid-webdavs:
    container_name: migrid-webdavs
    image: ucphhpc/migrid:$BUILD_TYPE
    build:
      context: ./
      dockerfile: Dockerfile
      # IMPORTANT: pass all ARGs used in Dockerfile here to allow optional override from .env file
      args:
        UID: ${UID:-1000}
        GID: ${GID:-1000}
        BUILD_TYPE: ${BUILD_TYPE}
        BUILD_TARGET: ${BUILD_TARGET}
        DOMAIN: ${DOMAIN}
        WILDCARD_DOMAIN: ${WILDCARD_DOMAIN}
        PUBLIC_DOMAIN: ${PUBLIC_DOMAIN}
        MIGCERT_DOMAIN: ${MIGCERT_DOMAIN}
        EXTCERT_DOMAIN: ${EXTCERT_DOMAIN}
        MIGOID_DOMAIN: ${MIGOID_DOMAIN}
        EXTOID_DOMAIN: ${EXTOID_DOMAIN}
        EXTOIDC_DOMAIN: ${EXTOIDC_DOMAIN}
        SID_DOMAIN: ${SID_DOMAIN}
        IO_DOMAIN: ${IO_DOMAIN}
        OPENID_DOMAIN: ${OPENID_DOMAIN}
        FTPS_DOMAIN: ${FTPS_DOMAIN}
        SFTP_DOMAIN: ${SFTP_DOMAIN}
        WEBDAVS_DOMAIN: ${WEBDAVS_DOMAIN}
        MIG_OID_PROVIDER: ${MIG_OID_PROVIDER}
        EXT_OID_PROVIDER: ${EXT_OID_PROVIDER}
        EXT_OIDC_PROVIDER_META_URL: ${EXT_OIDC_PROVIDER_META_URL}
        EXT_OIDC_CLIENT_NAME: ${EXT_OIDC_CLIENT_NAME}
        EXT_OIDC_CLIENT_ID: ${EXT_OIDC_CLIENT_ID}
        EXT_OIDC_SCOPE: ${EXT_OIDC_SCOPE}
        EXT_OIDC_REMOTE_USER_CLAIM: ${EXT_OIDC_REMOTE_USER_CLAIM}
        PUBLIC_HTTP_PORT: ${PUBLIC_HTTP_PORT}
        PUBLIC_HTTPS_PORT: ${PUBLIC_HTTPS_PORT}
        MIGCERT_HTTPS_PORT: ${MIGCERT_HTTPS_PORT}
        EXTCERT_HTTPS_PORT: ${EXTCERT_HTTPS_PORT}
        MIGOID_HTTPS_PORT: ${MIGOID_HTTPS_PORT}
        EXTOID_HTTPS_PORT: ${EXTOID_HTTPS_PORT}
        EXTOIDC_HTTPS_PORT: ${EXTOIDC_HTTPS_PORT}
        SID_HTTPS_PORT: ${SID_HTTPS_PORT}
        SFTP_PORT: ${SFTP_PORT}
        SFTP_SUBSYS_PORT: ${SFTP_SUBSYS_PORT}
        SFTP_SHOW_PORT: ${SFTP_SHOW_PORT}
        DAVS_PORT: ${DAVS_PORT}
        DAVS_SHOW_PORT: ${DAVS_SHOW_PORT}
        OPENID_PORT: ${OPENID_PORT}
        OPENID_SHOW_PORT: ${OPENID_SHOW_PORT}
        FTPS_CTRL_PORT: ${FTPS_CTRL_PORT}
        FTPS_CTRL_SHOW_PORT: ${FTPS_CTRL_SHOW_PORT}
        ADMIN_EMAIL: ${ADMIN_EMAIL}
        ADMIN_LIST: ${ADMIN_LIST}
        SMTP_SENDER: ${SMTP_SENDER}
        SMTP_SERVER: ${SMTP_SERVER}
        LOG_LEVEL: ${LOG_LEVEL}
        TITLE: ${TITLE}
        SHORT_TITLE: ${SHORT_TITLE}
        MIG_OID_TITLE: ${MIG_OID_TITLE}
        EXT_OID_TITLE: ${EXT_OID_TITLE}
        PEERS_PERMIT: ${PEERS_PERMIT}
        VGRID_CREATORS: ${VGRID_CREATORS}
        VGRID_MANAGERS: ${VGRID_MANAGERS}
        MIG_SVN_REPO: ${MIG_SVN_REPO}
        MIG_SVN_REV: ${MIG_SVN_REV}
        MIG_GIT_REPO: ${MIG_GIT_REPO}
        MIG_GIT_BRANCH: ${MIG_GIT_BRANCH}
        MIG_GIT_REV: ${MIG_GIT_REV}
        EMULATE_FLAVOR: ${EMULATE_FLAVOR}
        EMULATE_FQDN: ${EMULATE_FQDN}
        SKIN_SUFFIX: ${SKIN_SUFFIX}
        ENABLE_OPENID: ${ENABLE_OPENID}
        ENABLE_SFTP: ${ENABLE_SFTP}
        ENABLE_SFTP_SUBSYS: ${ENABLE_SFTP_SUBSYS}
        ENABLE_DAVS: ${ENABLE_DAVS}
        ENABLE_FTPS: ${ENABLE_FTPS}
        ENABLE_SHARELINKS: ${ENABLE_SHARELINKS}
        ENABLE_TRANSFERS: ${ENABLE_TRANSFERS}
        ENABLE_DUPLICATI: ${ENABLE_DUPLICATI}
        ENABLE_SEAFILE: ${ENABLE_SEAFILE}
        ENABLE_SANDBOXES: ${ENABLE_SANDBOXES}
        ENABLE_VMACHINES: ${ENABLE_VMACHINES}
        ENABLE_CRONTAB: ${ENABLE_CRONTAB}
        ENABLE_JOBS: ${ENABLE_JOBS}
        ENABLE_RESOURCES: ${ENABLE_RESOURCES}
        ENABLE_EVENTS: ${ENABLE_EVENTS}
        ENABLE_FREEZE: ${ENABLE_FREEZE}
        ENABLE_CRACKLIB: ${ENABLE_CRACKLIB}
        ENABLE_IMNOTIFY: ${ENABLE_IMNOTIFY}
        ENABLE_NOTIFY: ${ENABLE_NOTIFY}
        ENABLE_PREVIEW: ${ENABLE_PREVIEW}
        ENABLE_WORKFLOWS: ${ENABLE_WORKFLOWS}
        ENABLE_VERIFY_CERTS: ${ENABLE_VERIFY_CERTS}
        ENABLE_JUPYTER: ${ENABLE_JUPYTER}
        ENABLE_MIGADMIN: ${ENABLE_MIGADMIN}
        ENABLE_GDP: ${ENABLE_GDP}
        ENABLE_TWOFACTOR: ${ENABLE_TWOFACTOR}
        ENABLE_TWOFACTOR_STRICT_ADDRESS: ${ENABLE_TWOFACTOR_STRICT_ADDRESS}
        ENABLE_PEERS: ${ENABLE_PEERS}
        MIG_PASSWORD_POLICY: ${MIG_PASSWORD_POLICY}
        PEERS_MANDATORY: ${PEERS_MANDATORY}
        PEERS_EXPLICIT_FIELDS: ${PEERS_EXPLICIT_FIELDS}
        PEERS_CONTACT_HINT: ${PEERS_CONTACT_HINT}
        ENABLE_SELF_SIGNED_CERTS: ${ENABLE_SELF_SIGNED_CERTS}
        BUILD_MOD_AUTH_OPENID: ${BUILD_MOD_AUTH_OPENID:-False}
        UPGRADE_MOD_AUTH_OPENIDC: ${UPGRADE_MOD_AUTH_OPENIDC:-False}
        UPGRADE_PARAMIKO: ${UPGRADE_PARAMIKO:-False}
        PUBKEY_FROM_DNS: ${PUBKEY_FROM_DNS}
        PREFER_PYTHON3: ${PREFER_PYTHON3}
        SIGNUP_METHODS: ${SIGNUP_METHODS}
        LOGIN_METHODS: ${LOGIN_METHODS}
        USER_INTERFACES: ${USER_INTERFACES}
        AUTO_ADD_CERT_USER: ${AUTO_ADD_CERT_USER}
        AUTO_ADD_OID_USER: ${AUTO_ADD_OID_USER}
        AUTO_ADD_OIDC_USER: ${AUTO_ADD_OIDC_USER}
        CERT_VALID_DAYS: ${CERT_VALID_DAYS}
        OID_VALID_DAYS: ${OID_VALID_DAYS}
        GENERIC_VALID_DAYS: ${GENERIC_VALID_DAYS}
        DEFAULT_MENU: ${DEFAULT_MENU}
        USER_MENU: ${USER_MENU}
        WITH_PY3: ${WITH_PY3}
        WITH_GIT: ${WITH_GIT}
        JUPYTER_SERVICES: ${JUPYTER_SERVICES}
        JUPYTER_SERVICES_DESC: ${JUPYTER_SERVICES_DESC}
        VGRID_LABEL: ${VGRID_LABEL}
        EXTRA_USERPAGE_SCRIPTS: ${EXTRA_USERPAGE_SCRIPTS}
        EXTRA_USERPAGE_STYLES: ${EXTRA_USERPAGE_STYLES}
        GDP_EMAIL_NOTIFY: ${GDP_EMAIL_NOTIFY}
        MODERN_WSGIDAV: ${MODERN_WSGIDAV}
    environment:
      TZ: ${TZ}
      # RUN_SERVICES specifies which daemons to launch
      # Available target service names follow migrid init script and are:
      #   httpd script monitor sshmux events cron transfers
      #   openid sftp sftpsubsys webdavs ftps notify imnotify vmproxy
      RUN_SERVICES: webdavs rsyslogd
    depends_on:
      - migrid
    ports:
      # NOTE: expose the unique raw port(s) to host 
      - "4443:4443"
    networks:
      default:
        aliases:
          - webdavs.migrid.test
    volumes:
      - type: volume
        source: httpd
        target: /etc/httpd/
      - type: volume
        source: mig
        target: /home/mig/mig
      - type: volume
        source: certs
        target: /etc/httpd/MiG-certificates
      - type: volume
        source: state
        target: /home/mig/state
      - type: volume
        source: migrid-webdavs-syslog
        target: /var/log
    command: /app/docker-entry.sh

  nginx-proxy:
    image: jwilder/nginx-proxy
    container_name: nginx-proxy
    # TODO: can we add an httpd health check and switch to wait for condition
    #       service_healthy to avoid the storm of initial avoid nginx errors
    #       from racing apache during start up? Apparently that will not work
    #       with on-going jupyter integration due to swarm mode, however.
    depends_on:
      - migrid
    ports:
      # NOTE: expose the unique raw port(s) to host 
      - "80:80"
      - "443:443"
      - "444:444"
      - "445:445"
      - "446:446"
      - "447:447"
      - "448:448"
    volumes:
      - /var/run/docker.sock:/tmp/docker.sock:ro
      - ./nginx-proxy-migrid.test.conf:/etc/nginx/conf.d/migrid.conf
      - ./nginx-harden-https.conf:/etc/nginx/harden-https.conf
      - ./certs/MiG/*.migrid.test/server.crt:/etc/nginx/certs/www.migrid.test.crt
      - ./certs/MiG/*.migrid.test/server.crt:/etc/nginx/certs/cert.migrid.test.crt
      - ./certs/MiG/*.migrid.test/server.crt:/etc/nginx/certs/ext.migrid.test.crt
      - ./certs/MiG/*.migrid.test/server.crt:/etc/nginx/certs/oid.migrid.test.crt
      - ./certs/MiG/*.migrid.test/server.crt:/etc/nginx/certs/sid.migrid.test.crt
      - ./certs/MiG/*.migrid.test/server.key:/etc/nginx/certs/www.migrid.test.key
      - ./certs/MiG/*.migrid.test/server.key:/etc/nginx/certs/cert.migrid.test.key
      - ./certs/MiG/*.migrid.test/server.key:/etc/nginx/certs/ext.migrid.test.key
      - ./certs/MiG/*.migrid.test/server.key:/etc/nginx/certs/oid.migrid.test.key
      - ./certs/MiG/*.migrid.test/server.key:/etc/nginx/certs/sid.migrid.test.key
      - ./certs/dhparams.pem:/etc/nginx/dhparam/dhparam.pem

volumes:
  certs:
    # Volume for generated certificates (provided by migrid)
    driver: local
    driver_opts:
      type: none
      device: $PWD/certs
      o: bind

  httpd:
    # Volume used for httpd config (provided by migrid)
    driver: local
    driver_opts:
      type: none
      device: $PWD/httpd
      o: bind

  mig:
    # Volume used to contain the migrid code and conf (provided by migrid at svn)
    driver: local
    driver_opts:
      type: none
      device: $PWD/mig
      o: bind

  state:
    # Volume used to contain the migrid state (provided by migrid)
    driver: local
    driver_opts:
      type: none
      device: $PWD/state
      o: bind
  
  migrid-syslog:
    # Volume used for exposing migrid system log
    driver: local
    driver_opts:
      type: none
      device: $PWD/log/migrid
      o: bind

  migrid-io-syslog:
    # Volume used for exposing migrid system log
    driver: local
    driver_opts:
      type: none
      device: $PWD/log/migrid-io
      o: bind

  migrid-openid-syslog:
    # Volume used for exposing migrid system log
    driver: local
    driver_opts:
      type: none
      device: $PWD/log/migrid-openid
      o: bind

  migrid-sftp-syslog:
    # Volume used for exposing migrid system log
    driver: local
    driver_opts:
      type: none
      device: $PWD/log/migrid-sftp
      o: bind

  migrid-webdavs-syslog:
    # Volume used for exposing migrid system log
    driver: local
    driver_opts:
      type: none
      device: $PWD/log/migrid-webdavs
      o: bind

  migrid-ftps-syslog:
    # Volume used for exposing migrid system log
    driver: local
    driver_opts:
      type: none
      device: $PWD/log/migrid-ftps
      o: bind
